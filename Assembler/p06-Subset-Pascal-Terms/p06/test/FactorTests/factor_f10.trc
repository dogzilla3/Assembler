
Token: Code=293  Line= 1   Col= 8    Name= PROGRAM      Spelling= 'program'
Token: Code=300  Line= 1   Col= 12   Name= ID           Spelling= 'f10'
Token: Code=265  Line= 1   Col= 13   Name= SEMICOLON    Spelling= ';'
#05 program_parameters -> EMPTY
#02 program_head -> program ID(f10) program_parameters SEMICOLON
#10 declarations -> EMPTY
Token: Code=297  Line= 2   Col= 5    Name= VAR          Spelling= 'var'
Token: Code=300  Line= 2   Col= 7    Name= ID           Spelling= 'r'
#08 identifier_list -> ID(r) identifier_list={r}
Token: Code=266  Line= 2   Col= 8    Name= COLON        Spelling= ':'
Token: Code=280  Line= 2   Col= 13   Name= ARRAY        Spelling= 'array'
Token: Code=275  Line= 2   Col= 14   Name= LBRACKET     Spelling= '['
Token: Code=301  Line= 2   Col= 15   Name= INTLIT       Spelling= '5'
Token: Code=277  Line= 2   Col= 17   Name= RANGE        Spelling= '..'
Token: Code=301  Line= 2   Col= 19   Name= INTLIT       Spelling= '14'
Token: Code=276  Line= 2   Col= 20   Name= RBRACKET     Spelling= ']'
Token: Code=290  Line= 2   Col= 23   Name= OF           Spelling= 'of'
Token: Code=300  Line= 2   Col= 28   Name= ID           Spelling= 'real'
#14 standard_type -> ID(real)
Symbol(Type Symbol) id(real)
  type(Real)
    size(1) alignment(1)
#13 type -> array [ intlit .. intlit ] of standard_type
Token: Code=265  Line= 2   Col= 29   Name= SEMICOLON    Spelling= ';'
#11 declarations -> declarations VAR identifier_list  {r} : type SEMICOLON
Token: Code=297  Line= 3   Col= 5    Name= VAR          Spelling= 'var'
Token: Code=300  Line= 3   Col= 7    Name= ID           Spelling= 's'
#08 identifier_list -> ID(s) identifier_list={s}
Token: Code=266  Line= 3   Col= 8    Name= COLON        Spelling= ':'
Token: Code=300  Line= 3   Col= 12   Name= ID           Spelling= 'real'
#14 standard_type -> ID(real)
Symbol(Type Symbol) id(real)
  type(Real)
    size(1) alignment(1)
#12 type -> standard_type
Token: Code=265  Line= 3   Col= 13   Name= SEMICOLON    Spelling= ';'
#11 declarations -> declarations VAR identifier_list  {s} : type SEMICOLON
Token: Code=281  Line= 4   Col= 6    Name= BEGIN        Spelling= 'begin'
#15 subprogram_declarations -> EMPTY
#03 program_declarations -> declarations subprogram_declarations
Token: Code=300  Line= 5   Col= 3    Name= ID           Spelling= 's'
Token: Code=262  Line= 5   Col= 5    Name= ASSIGN       Spelling= ':='
#34 variable -> ID(s)
Token: Code=300  Line= 5   Col= 6    Name= ID           Spelling= 'r'
Token: Code=275  Line= 5   Col= 7    Name= LBRACKET     Spelling= '['
Token: Code=301  Line= 5   Col= 8    Name= INTLIT       Spelling= '7'
#68 factor -> INTLIT(7)
          ldc       i         7         
#56 term -> factor
Token: Code=276  Line= 5   Col= 9    Name= RBRACKET     Spelling= ']'
#48 simple_expression -> term
#40 expression -> simple_expression
#64 factor -> ID(r) RBRACKET expression RBRACKET
#56 term -> factor
Token: Code=285  Line= 6   Col= 4    Name= END          Spelling= 'end'
#48 simple_expression -> term
#40 expression -> simple_expression
#29 statement -> variable := expression
#27 statement_list -> statement
#26 optional_statements -> statement_list
#24 compound_statement -> BEGIN optional_statements END
Token: Code=263  Line= 6   Col= 10   Name= PERIOD       Spelling= '.'
#04 program_body -> compound_statement PERIOD
#01 program -> program_head program_declarations program_body
Locality: lexical level 1

  Symbol(Variable Symbol) id(r)
    type(Array)
      Size(10)
      Index Type
        type(Range)
          Constant value(5)
            type(Integer)
              size(1) alignment(1)
          Constant value(14)
            type(Integer)
              size(1) alignment(1)
      Element Type
        type(Real)
          size(1) alignment(1)
    lexicallevel(1) address(5)
  Symbol(Variable Symbol) id(s)
    type(Real)
      size(1) alignment(1)
    lexicallevel(1) address(15)

Locality: lexical level 0

Symbol(Standard Function Symbol) id(abs)
  type(Void)
    size(0) alignment(0)
  cspid(abs)
Symbol(Type Symbol) id(boolean)
  type(Boolean)
    size(1) alignment(1)
Symbol(Type Symbol) id(char)
  type(Character)
    size(1) alignment(1)
Symbol(Standard Function Symbol) id(chr)
  type(Void)
    size(0) alignment(0)
  cspid(chr)
Symbol(Program Symbol) id(f10)
  type(Void)
    size(0) alignment(0)
  lexicallevel(0) elabel(L00001) splabel(L00002) eplabel(L00003)
Symbol(Constant Symbol) id(false)
  type(Boolean)
    size(1) alignment(1)
  Constant value(0)
    type(Boolean)
      size(1) alignment(1)
Symbol(Type Symbol) id(integer)
  type(Integer)
    size(1) alignment(1)
Symbol(Standard Function Symbol) id(ord)
  type(Void)
    size(0) alignment(0)
  cspid(ord)
Symbol(Standard Function Symbol) id(pred)
  type(Void)
    size(0) alignment(0)
  cspid(dec)
Symbol(Standard Procedure Symbol) id(readchar)
  type(Void)
    size(0) alignment(0)
  cspid(rdc)
Symbol(Standard Procedure Symbol) id(readinteger)
  type(Void)
    size(0) alignment(0)
  cspid(rdi)
Symbol(Standard Procedure Symbol) id(readln)
  type(Void)
    size(0) alignment(0)
  cspid(rln)
Symbol(Standard Procedure Symbol) id(readreal)
  type(Void)
    size(0) alignment(0)
  cspid(rdr)
Symbol(Standard Procedure Symbol) id(readstring)
  type(Void)
    size(0) alignment(0)
  cspid(rds)
Symbol(Type Symbol) id(real)
  type(Real)
    size(1) alignment(1)
Symbol(Standard Function Symbol) id(round)
  type(Void)
    size(0) alignment(0)
  cspid(rnd)
Symbol(Standard Function Symbol) id(sqrt)
  type(Void)
    size(0) alignment(0)
  cspid(sqt)
Symbol(Standard Function Symbol) id(succ)
  type(Void)
    size(0) alignment(0)
  cspid(inc)
Symbol(Constant Symbol) id(true)
  type(Boolean)
    size(1) alignment(1)
  Constant value(1)
    type(Boolean)
      size(1) alignment(1)
Symbol(Standard Function Symbol) id(trunc)
  type(Void)
    size(0) alignment(0)
  cspid(trc)
Symbol(Standard Procedure Symbol) id(writeboolean)
  type(Void)
    size(0) alignment(0)
  cspid(wrb)
Symbol(Standard Procedure Symbol) id(writechar)
  type(Void)
    size(0) alignment(0)
  cspid(wrc)
Symbol(Standard Procedure Symbol) id(writeexponential)
  type(Void)
    size(0) alignment(0)
  cspid(wre)
Symbol(Standard Procedure Symbol) id(writefixed)
  type(Void)
    size(0) alignment(0)
  cspid(wrf)
Symbol(Standard Procedure Symbol) id(writeinteger)
  type(Void)
    size(0) alignment(0)
  cspid(wri)
Symbol(Standard Procedure Symbol) id(writeln)
  type(Void)
    size(0) alignment(0)
  cspid(wln)
Symbol(Standard Procedure Symbol) id(writestring)
  type(Void)
    size(0) alignment(0)
  cspid(wrs)
