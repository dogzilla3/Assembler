
       **Start of Parse**


Token: Code=293  Line= 12  Col= 8    Name= PROGRAM      Spelling= 'program'
Token: Code=300  Line= 12  Col= 17   Name= ID           Spelling= 'p020_000'
Token: Code=265  Line= 12  Col= 18   Name= SEMICOLON    Spelling= ';'
#05 program_parameters -> EMPTY
#02 program_head -> program ID(p020_000) program_parameters SEMICOLON
#10 declarations -> EMPTY
Token: Code=292  Line= 13  Col= 12   Name= PROCEDURE    Spelling= 'procedure'
#15 subprogram_declarations -> EMPTY
Token: Code=300  Line= 13  Col= 18   Name= ID           Spelling= 'hello'
Token: Code=265  Line= 13  Col= 19   Name= SEMICOLON    Spelling= ';'
#20 subprogram_parameters -> EMPTY
#19 subprogram_head -> procedure ID(hello) subprogram_parameters ;
#10 declarations -> EMPTY
Token: Code=281  Line= 14  Col= 8    Name= BEGIN        Spelling= 'begin'
Token: Code=300  Line= 15  Col= 12   Name= ID           Spelling= 'writeln'
Token: Code=273  Line= 15  Col= 13   Name= LPAREN       Spelling= '('
Token: Code=303  Line= 15  Col= 33   Name= CHRLIT       Spelling= ''Hello, I love you.''
#70 factor -> CHRLIT('Hello, I love you.')
#56 term -> factor
Token: Code=274  Line= 15  Col= 34   Name= RPAREN       Spelling= ')'
#48 simple_expression -> term
#40 expression -> simple_expression
#38 expression_list -> expression
#37 ID(writeln) ( expression_list )
#30 statement -> procedure_statement
#27 statement_list -> statement
Token: Code=285  Line= 16  Col= 6    Name= END          Spelling= 'end'
#26 optional_statements -> statement_list
#24 compound_statement -> BEGIN optional_statements END
#17 subprogram_declarations -> subprogram_head declarations compound_statement
Token: Code=265  Line= 16  Col= 14   Name= SEMICOLON    Spelling= ';'
#16 subprogram_declarations -> subprogram_declarations subprogram_declaration ;
Token: Code=281  Line= 17  Col= 6    Name= BEGIN        Spelling= 'begin'
#03 program_declarations -> declarations subprogram_declarations
Token: Code=300  Line= 18  Col= 8    Name= ID           Spelling= 'hello'
Token: Code=285  Line= 19  Col= 4    Name= END          Spelling= 'end'
#36 procedure_statement -> ID(hello)
#30 statement -> procedure_statement
#27 statement_list -> statement
#26 optional_statements -> statement_list
#24 compound_statement -> BEGIN optional_statements END
Token: Code=263  Line= 19  Col= 15   Name= PERIOD       Spelling= '.'
#04 program_body -> compound_statement PERIOD
#01 program -> program_head program_declarations program_body
       **End of Parse**

