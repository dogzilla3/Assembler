
Token: Code=293  Line= 12  Col= 8    Name= PROGRAM      Spelling= 'program'
Token: Code=300  Line= 12  Col= 17   Name= ID           Spelling= 'p032_000'
Token: Code=265  Line= 12  Col= 18   Name= SEMICOLON    Spelling= ';'
#05 program_parameters -> EMPTY
#02 program_head -> program ID(p032_000) program_parameters SEMICOLON
L00001

L00002

L00003

#10 variable_declarations -> EMPTY
Token: Code=297  Line= 13  Col= 6    Name= VAR          Spelling= 'var'
Token: Code=300  Line= 13  Col= 11   Name= ID           Spelling= 'cash'
#08 identifier_list -> ID(cash) identifier_list={cash}
Token: Code=266  Line= 13  Col= 12   Name= COLON        Spelling= ':'
Token: Code=300  Line= 13  Col= 16   Name= ID           Spelling= 'real'
#14 standard_type -> ID(real)
Symbol(Type Symbol) id(real)
  type(Real)
    size(1) alignment(1)
#12 type -> standard_type
Token: Code=265  Line= 13  Col= 17   Name= SEMICOLON    Spelling= ';'
#11 variable_declarations -> variable_declarations VAR identifier_list  {cash} : type SEMICOLON
Token: Code=281  Line= 14  Col= 6    Name= BEGIN        Spelling= 'begin'
#15 subprogram_declarations -> EMPTY
#03 program_declarations -> declarations subprogram_declarations
Token: Code=300  Line= 15  Col= 14   Name= ID           Spelling= 'writestring'
Token: Code=273  Line= 15  Col= 15   Name= LPAREN       Spelling= '('
Token: Code=303  Line= 15  Col= 44   Name= CHRLIT       Spelling= ''How much cash do you have? ''
#70 factor -> CHRLIT('How much cash do you have? ')
          ldc       s         'How much cash do you have? '
#56 term -> factor
Token: Code=274  Line= 15  Col= 45   Name= RPAREN       Spelling= ')'
#48 simple_expression -> term
#40 expression -> simple_expression
#38 expression_list -> expression
#37 ID(writestring) ( expression_list )
          csp                 wrs       
#30 statement -> procedure_statement
#27 statement_list -> statement
          ldc       s         'How much cash do you have? '
          csp                 wrs       
Token: Code=265  Line= 15  Col= 46   Name= SEMICOLON    Spelling= ';'
Token: Code=300  Line= 16  Col= 11   Name= ID           Spelling= 'readreal'
Token: Code=273  Line= 16  Col= 12   Name= LPAREN       Spelling= '('
Token: Code=300  Line= 16  Col= 16   Name= ID           Spelling= 'cash'
Token: Code=274  Line= 16  Col= 17   Name= RPAREN       Spelling= ')'
#63 factor -> ID(cash)
Symbol(Variable Symbol) id(cash)
  type(Real)
    size(1) alignment(1)
  lexicallevel(1) address(5)
          lvr       0         05        
#56 term -> factor
#48 simple_expression -> term
#40 expression -> simple_expression
#38 expression_list -> expression
#37 ID(readreal) ( expression_list )
          csp                 rdr       
#30 statement -> procedure_statement
#28 statement_list -> statement_list SEMICOLON statement
          ldc       s         'How much cash do you have? '
          csp                 wrs       
          lvr       0         05        
          csp                 rdr       
Token: Code=265  Line= 16  Col= 18   Name= SEMICOLON    Spelling= ';'
Token: Code=300  Line= 17  Col= 9    Name= ID           Spelling= 'readln'
Token: Code=265  Line= 17  Col= 10   Name= SEMICOLON    Spelling= ';'
#36 procedure_statement -> ID(readln)
#30 statement -> procedure_statement
#28 statement_list -> statement_list SEMICOLON statement
          ldc       s         'How much cash do you have? '
          csp                 wrs       
          lvr       0         05        
          csp                 rdr       
          csp                 rln       
Token: Code=287  Line= 18  Col= 5    Name= IF           Spelling= 'if'
Token: Code=300  Line= 18  Col= 10   Name= ID           Spelling= 'cash'
Token: Code=269  Line= 18  Col= 11   Name= LES          Spelling= '<'
#63 factor -> ID(cash)
Symbol(Variable Symbol) id(cash)
  type(Real)
    size(1) alignment(1)
  lexicallevel(1) address(5)
          lvr       0         05        
#56 term -> factor
#48 simple_expression -> term
#44 relop -> <
Token: Code=302  Line= 18  Col= 16   Name= REALIT       Spelling= '100.0'
#69 factor -> REALIT(100.0)
          ldc       r         100.0     
#56 term -> factor
Token: Code=294  Line= 18  Col= 21   Name= THEN         Spelling= 'then'
#48 simple_expression -> term
#41 expression -> simple_expression relop simple_expression
          lvr       0         05        
          ldc       r         100.0     
          les       r                   
Token: Code=281  Line= 19  Col= 10   Name= BEGIN        Spelling= 'begin'
Token: Code=300  Line= 20  Col= 18   Name= ID           Spelling= 'writestring'
Token: Code=273  Line= 20  Col= 19   Name= LPAREN       Spelling= '('
Token: Code=303  Line= 20  Col= 52   Name= CHRLIT       Spelling= ''You wicked and slothful person.''
#70 factor -> CHRLIT('You wicked and slothful person.')
          ldc       s         'You wicked and slothful person.'
#56 term -> factor
Token: Code=274  Line= 20  Col= 53   Name= RPAREN       Spelling= ')'
#48 simple_expression -> term
#40 expression -> simple_expression
#38 expression_list -> expression
#37 ID(writestring) ( expression_list )
          csp                 wrs       
#30 statement -> procedure_statement
#27 statement_list -> statement
          ldc       s         'You wicked and slothful person.'
          csp                 wrs       
Token: Code=265  Line= 20  Col= 54   Name= SEMICOLON    Spelling= ';'
Token: Code=300  Line= 21  Col= 14   Name= ID           Spelling= 'writeln'
Token: Code=265  Line= 21  Col= 15   Name= SEMICOLON    Spelling= ';'
#36 procedure_statement -> ID(writeln)
#30 statement -> procedure_statement
#28 statement_list -> statement_list SEMICOLON statement
          ldc       s         'You wicked and slothful person.'
          csp                 wrs       
          csp                 wln       
Token: Code=300  Line= 22  Col= 18   Name= ID           Spelling= 'writestring'
Token: Code=273  Line= 22  Col= 19   Name= LPAREN       Spelling= '('
Token: Code=303  Line= 22  Col= 48   Name= CHRLIT       Spelling= ''I''d never go out with you.''
#70 factor -> CHRLIT('I''d never go out with you.')
          ldc       s         'I''d never go out with you.'
#56 term -> factor
Token: Code=274  Line= 22  Col= 49   Name= RPAREN       Spelling= ')'
#48 simple_expression -> term
#40 expression -> simple_expression
#38 expression_list -> expression
#37 ID(writestring) ( expression_list )
          csp                 wrs       
#30 statement -> procedure_statement
#28 statement_list -> statement_list SEMICOLON statement
          ldc       s         'You wicked and slothful person.'
          csp                 wrs       
          csp                 wln       
          ldc       s         'I''d never go out with you.'
          csp                 wrs       
Token: Code=265  Line= 22  Col= 50   Name= SEMICOLON    Spelling= ';'
Token: Code=300  Line= 23  Col= 14   Name= ID           Spelling= 'writeln'
Token: Code=285  Line= 24  Col= 8    Name= END          Spelling= 'end'
#36 procedure_statement -> ID(writeln)
#30 statement -> procedure_statement
#28 statement_list -> statement_list SEMICOLON statement
          ldc       s         'You wicked and slothful person.'
          csp                 wrs       
          csp                 wln       
          ldc       s         'I''d never go out with you.'
          csp                 wrs       
          csp                 wln       
#26 optional_statements -> statement_list
          ldc       s         'You wicked and slothful person.'
          csp                 wrs       
          csp                 wln       
          ldc       s         'I''d never go out with you.'
          csp                 wrs       
          csp                 wln       
#24 compound_statement -> BEGIN optional_statements END
          ldc       s         'You wicked and slothful person.'
          csp                 wrs       
          csp                 wln       
          ldc       s         'I''d never go out with you.'
          csp                 wrs       
          csp                 wln       
#31 statement -> compound_statement
Token: Code=284  Line= 25  Col= 7    Name= ELSE         Spelling= 'else'
Token: Code=281  Line= 26  Col= 10   Name= BEGIN        Spelling= 'begin'
Token: Code=300  Line= 27  Col= 18   Name= ID           Spelling= 'writestring'
Token: Code=273  Line= 27  Col= 19   Name= LPAREN       Spelling= '('
Token: Code=303  Line= 27  Col= 69   Name= CHRLIT       Spelling= ''Come on, honey, let''s have a good time tonight!''
#70 factor -> CHRLIT('Come on, honey, let''s have a good time tonight!')
          ldc       s         'Come on, honey, let''s have a good time tonight!'
#56 term -> factor
Token: Code=274  Line= 27  Col= 70   Name= RPAREN       Spelling= ')'
#48 simple_expression -> term
#40 expression -> simple_expression
#38 expression_list -> expression
#37 ID(writestring) ( expression_list )
          csp                 wrs       
#30 statement -> procedure_statement
#27 statement_list -> statement
          ldc       s         'Come on, honey, let''s have a good time tonight!'
          csp                 wrs       
Token: Code=265  Line= 27  Col= 71   Name= SEMICOLON    Spelling= ';'
Token: Code=300  Line= 28  Col= 14   Name= ID           Spelling= 'writeln'
Token: Code=285  Line= 29  Col= 8    Name= END          Spelling= 'end'
#36 procedure_statement -> ID(writeln)
#30 statement -> procedure_statement
#28 statement_list -> statement_list SEMICOLON statement
          ldc       s         'Come on, honey, let''s have a good time tonight!'
          csp                 wrs       
          csp                 wln       
#26 optional_statements -> statement_list
          ldc       s         'Come on, honey, let''s have a good time tonight!'
          csp                 wrs       
          csp                 wln       
#24 compound_statement -> BEGIN optional_statements END
          ldc       s         'Come on, honey, let''s have a good time tonight!'
          csp                 wrs       
          csp                 wln       
#31 statement -> compound_statement
#32 statement -> if expression then statement else statement
L00004

L00005

          lvr       0         05        
          ldc       r         100.0     
          les       r                   
          fjp                 L00004    
          ldc       s         'You wicked and slothful person.'
          csp                 wrs       
          csp                 wln       
          ldc       s         'I''d never go out with you.'
          csp                 wrs       
          csp                 wln       
          ujp                 L00005    
L00004                                  
          ldc       s         'Come on, honey, let''s have a good time tonight!'
          csp                 wrs       
          csp                 wln       
L00005                                  
#28 statement_list -> statement_list SEMICOLON statement
          ldc       s         'How much cash do you have? '
          csp                 wrs       
          lvr       0         05        
          csp                 rdr       
          csp                 rln       
          lvr       0         05        
          ldc       r         100.0     
          les       r                   
          fjp                 L00004    
          ldc       s         'You wicked and slothful person.'
          csp                 wrs       
          csp                 wln       
          ldc       s         'I''d never go out with you.'
          csp                 wrs       
          csp                 wln       
          ujp                 L00005    
L00004                                  
          ldc       s         'Come on, honey, let''s have a good time tonight!'
          csp                 wrs       
          csp                 wln       
L00005                                  
Token: Code=265  Line= 29  Col= 9    Name= SEMICOLON    Spelling= ';'
Token: Code=300  Line= 30  Col= 14   Name= ID           Spelling= 'writestring'
Token: Code=273  Line= 30  Col= 15   Name= LPAREN       Spelling= '('
Token: Code=303  Line= 30  Col= 31   Name= CHRLIT       Spelling= ''See you later!''
#70 factor -> CHRLIT('See you later!')
          ldc       s         'See you later!'
#56 term -> factor
Token: Code=274  Line= 30  Col= 32   Name= RPAREN       Spelling= ')'
#48 simple_expression -> term
#40 expression -> simple_expression
#38 expression_list -> expression
#37 ID(writestring) ( expression_list )
          csp                 wrs       
#30 statement -> procedure_statement
#28 statement_list -> statement_list SEMICOLON statement
          ldc       s         'How much cash do you have? '
          csp                 wrs       
          lvr       0         05        
          csp                 rdr       
          csp                 rln       
          lvr       0         05        
          ldc       r         100.0     
          les       r                   
          fjp                 L00004    
          ldc       s         'You wicked and slothful person.'
          csp                 wrs       
          csp                 wln       
          ldc       s         'I''d never go out with you.'
          csp                 wrs       
          csp                 wln       
          ujp                 L00005    
L00004                                  
          ldc       s         'Come on, honey, let''s have a good time tonight!'
          csp                 wrs       
          csp                 wln       
L00005                                  
          ldc       s         'See you later!'
          csp                 wrs       
Token: Code=265  Line= 30  Col= 33   Name= SEMICOLON    Spelling= ';'
Token: Code=300  Line= 31  Col= 10   Name= ID           Spelling= 'writeln'
Token: Code=285  Line= 32  Col= 4    Name= END          Spelling= 'end'
#36 procedure_statement -> ID(writeln)
#30 statement -> procedure_statement
#28 statement_list -> statement_list SEMICOLON statement
          ldc       s         'How much cash do you have? '
          csp                 wrs       
          lvr       0         05        
          csp                 rdr       
          csp                 rln       
          lvr       0         05        
          ldc       r         100.0     
          les       r                   
          fjp                 L00004    
          ldc       s         'You wicked and slothful person.'
          csp                 wrs       
          csp                 wln       
          ldc       s         'I''d never go out with you.'
          csp                 wrs       
          csp                 wln       
          ujp                 L00005    
L00004                                  
          ldc       s         'Come on, honey, let''s have a good time tonight!'
          csp                 wrs       
          csp                 wln       
L00005                                  
          ldc       s         'See you later!'
          csp                 wrs       
          csp                 wln       
#26 optional_statements -> statement_list
          ldc       s         'How much cash do you have? '
          csp                 wrs       
          lvr       0         05        
          csp                 rdr       
          csp                 rln       
          lvr       0         05        
          ldc       r         100.0     
          les       r                   
          fjp                 L00004    
          ldc       s         'You wicked and slothful person.'
          csp                 wrs       
          csp                 wln       
          ldc       s         'I''d never go out with you.'
          csp                 wrs       
          csp                 wln       
          ujp                 L00005    
L00004                                  
          ldc       s         'Come on, honey, let''s have a good time tonight!'
          csp                 wrs       
          csp                 wln       
L00005                                  
          ldc       s         'See you later!'
          csp                 wrs       
          csp                 wln       
#24 compound_statement -> BEGIN optional_statements END
          ldc       s         'How much cash do you have? '
          csp                 wrs       
          lvr       0         05        
          csp                 rdr       
          csp                 rln       
          lvr       0         05        
          ldc       r         100.0     
          les       r                   
          fjp                 L00004    
          ldc       s         'You wicked and slothful person.'
          csp                 wrs       
          csp                 wln       
          ldc       s         'I''d never go out with you.'
          csp                 wrs       
          csp                 wln       
          ujp                 L00005    
L00004                                  
          ldc       s         'Come on, honey, let''s have a good time tonight!'
          csp                 wrs       
          csp                 wln       
L00005                                  
          ldc       s         'See you later!'
          csp                 wrs       
          csp                 wln       
Token: Code=263  Line= 32  Col= 15   Name= PERIOD       Spelling= '.'
#04 program_body -> compound_statement PERIOD
#01 program -> program_head program_declarations program_body
Locality: lexical level 1

  Symbol(Variable Symbol) id(cash)
    type(Real)
      size(1) alignment(1)
    lexicallevel(1) address(5)

Locality: lexical level 0

Symbol(Standard Function Symbol) id(abs)
  type(Void)
    size(0) alignment(0)
  cspid(abs)
Symbol(Type Symbol) id(boolean)
  type(Boolean)
    size(1) alignment(1)
Symbol(Type Symbol) id(char)
  type(Character)
    size(1) alignment(1)
Symbol(Standard Function Symbol) id(chr)
  type(Void)
    size(0) alignment(0)
  cspid(chr)
Symbol(Constant Symbol) id(false)
  type(Boolean)
    size(1) alignment(1)
  Constant value(0)
    type(Boolean)
      size(1) alignment(1)
Symbol(Type Symbol) id(integer)
  type(Integer)
    size(1) alignment(1)
Symbol(Standard Function Symbol) id(ord)
  type(Void)
    size(0) alignment(0)
  cspid(ord)
In Print Function

Symbol(Procedure Symbol) id(p032_000)
  type(Subprogram)
      Return Type
        type(Void)
          size(0) alignment(0)
      Parameter Types
  lexicallevel(0) elabel(L00001) splabel(L00002) eplabel(L00003)
Symbol(Standard Function Symbol) id(pred)
  type(Void)
    size(0) alignment(0)
  cspid(dec)
Symbol(Standard Procedure Symbol) id(readchar)
  type(Void)
    size(0) alignment(0)
  cspid(rdc)
Symbol(Standard Procedure Symbol) id(readinteger)
  type(Void)
    size(0) alignment(0)
  cspid(rdi)
Symbol(Standard Procedure Symbol) id(readln)
  type(Void)
    size(0) alignment(0)
  cspid(rln)
Symbol(Standard Procedure Symbol) id(readreal)
  type(Void)
    size(0) alignment(0)
  cspid(rdr)
Symbol(Standard Procedure Symbol) id(readstring)
  type(Void)
    size(0) alignment(0)
  cspid(rds)
Symbol(Type Symbol) id(real)
  type(Real)
    size(1) alignment(1)
Symbol(Standard Function Symbol) id(round)
  type(Void)
    size(0) alignment(0)
  cspid(rnd)
Symbol(Standard Function Symbol) id(sqrt)
  type(Void)
    size(0) alignment(0)
  cspid(sqt)
Symbol(Standard Function Symbol) id(succ)
  type(Void)
    size(0) alignment(0)
  cspid(inc)
Symbol(Constant Symbol) id(true)
  type(Boolean)
    size(1) alignment(1)
  Constant value(1)
    type(Boolean)
      size(1) alignment(1)
Symbol(Standard Function Symbol) id(trunc)
  type(Void)
    size(0) alignment(0)
  cspid(trc)
Symbol(Standard Procedure Symbol) id(writeboolean)
  type(Void)
    size(0) alignment(0)
  cspid(wrb)
Symbol(Standard Procedure Symbol) id(writechar)
  type(Void)
    size(0) alignment(0)
  cspid(wrc)
Symbol(Standard Procedure Symbol) id(writeexponential)
  type(Void)
    size(0) alignment(0)
  cspid(wre)
Symbol(Standard Procedure Symbol) id(writefixed)
  type(Void)
    size(0) alignment(0)
  cspid(wrf)
Symbol(Standard Procedure Symbol) id(writeinteger)
  type(Void)
    size(0) alignment(0)
  cspid(wri)
Symbol(Standard Procedure Symbol) id(writeln)
  type(Void)
    size(0) alignment(0)
  cspid(wln)
Symbol(Standard Procedure Symbol) id(writestring)
  type(Void)
    size(0) alignment(0)
  cspid(wrs)

